version: 2.1

orbs:
  codacy: codacy/base@5.0.1

jobs:
  test:
    docker:
      - image: circleci/python:3.6
    working_directory: ~/workdir
    steps:
      - attach_workspace:
          at: ~/workdir
      - restore_cache:
          key: v1-dependencies-{{ checksum "setup.py" }}
      - run:
          name: dependencies
          command: |
            python3 -m venv env
            . env/bin/activate
            python3 -m pip install --upgrade -r test_requirements.pip
      - run:
          name: test
          command: |
            . env/bin/activate
            python3 -m pytest -v .
      - save_cache:
          paths:
            - ./env
          key: v1-dependencies-{{ checksum "setup.py" }}

  deploy:
    docker:
      - image: circleci/python:3.6
    working_directory: ~/workdir
    steps:
      - attach_workspace:
          at: ~/workdir
      - run:
          name: create package files
          command: |
            python3 setup.py sdist bdist_wheel
      - run:
          name: create .pypirc file
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              echo -e "username = $PYPI_USERNAME" >> ~/.pypirc
              echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
            else
              echo -e "repository = https://test.pypi.org/legacy/" >> ~/.pypirc
              echo -e "username = $TEST_PYPI_USERNAME" >> ~/.pypirc
              echo -e "password = $TEST_PYPI_PASSWORD" >> ~/.pypirc
            fi
      - run:
          name: upload package to pypi server
          command: |
            python3 -m venv env
            . env/bin/activate
            pip install --upgrade twine
            python -m twine upload dist/*
      - save_cache:
          paths:
            - ./env
          key: v1-dependencies-{{ checksum "setup.py" }}

workflows:
  version: 2

  test_build_deploy:
    jobs:
      - codacy/checkout_and_version
      - test:
          requires:
          - codacy/checkout_and_version
      - deploy:
          context: CodacyPyPi
          requires:
          - codacy/checkout_and_version
          filters:
            branches:
              only:
                - master
      - codacy/tag_version:
          context: CodacyAWS
          requires:
          - deploy
